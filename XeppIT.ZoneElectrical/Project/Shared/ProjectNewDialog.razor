@using XeppIT.ZoneElectrical.Identity.Services
@using XeppIT.ZoneElectrical.Project.Models
@using XeppIT.ZoneElectrical.Rolodex
@using XeppIT.ZoneElectrical.Rolodex.Addresses.Model
@inject ProjectManager ProjectManager
@inject RolodexService RolodexService

<div class="container-fluid">
        <div class="row mb-3">
            <label for="JobNo" class="form-check-label">Job No</label>
            <input id="JobNo" class="form-control mb-3" type="text" aria-label="Job Number" @bind-value="@_projectModel.JobNo">
        </div>
        <div class="row mb-3">
            <h3>AutoComplete</h3>
        </div>
        <div class="row mb-3">
            <label for="WorkDescription" class="form-check-label">Work Description</label>
            <input id="WorkDescription" class="form-control mb-3" type="text" aria-label="Work Description" @bind-value="@_projectModel.WorkDescription">
        </div>
        <div class="row justify-content-end">
            <button type="button" class="btn btn-primary" @onclick="() => Save()">Save</button>
            <button type="button" class="btn btn-secondary ml-1" @onclick="() => Cancel()">Cancel</button>
        </div>
    </div>

@code {
    readonly ProjectModel _projectModel = new ProjectModel();
    List<Address> _addresses = new List<Address>();

    protected override async Task OnInitializedAsync()
    {
    // Get the current logged in user
        _addresses = await RolodexService.FindAllAddressesAsync();
    }

    void Change(object value, string name)
    {

    }

    async Task Save()
    {
        await ProjectManager.CreateProjectAsync(_projectModel);

    }

    void Cancel()
    {

    }

    async Task OpenTest()
    {

    }
}