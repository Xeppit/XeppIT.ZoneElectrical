@page "/projectlist"
@using XeppIT.ZoneElectrical.Project.Models
@using XeppIT.ZoneElectrical.Project.Shared

@inject ProjectManager ProjectManager

<AuthorizeView Roles="EMPLOYEE">
    <Authorized>
        <div class="container-fluid">
            <div class="row">
                <h3>Project List</h3>
            </div>
            <div class="row">
                <button type="button" class="btn btn-primary mb-3" @onclick="OpenNewProjectDialog">New User</button>
            </div>
            <div class="row">
                <div class="table-responsive">
                    <table class="table table-striped table-dark">
                        <thead>
                            <tr>
                                <th scope="col">JobNo</th>
                                <th scope="col">Site</th>
                                <th scope="col">Description</th>
                                <th scope="col">Customer</th>
                                <th scope="col">Customer Contact</th>
                                <th scope="col">Edit</th>
                                <th scope="col">Reset</th>
                                <th scope="col">Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in Projects)
                            {
                                <tr>
                                    <td>@project.JobNo</td>
                                    <td>@project.ProjectAddress.Name</td>
                                    <td>@project.WorkDescription</td>
                                    <td>@project.ProjectManager.Company</td>
                                    <td>@project.ProjectManager.ToString()</td>
                                    <td><button type="button" class="btn btn-primary" @onclick="() => OpenEditProjectDialog(project)"><span class="oi oi-pencil"></span></button></td>
                                    <td><button type="button" class="btn btn-danger" @onclick="() => DeleteProject(project)"><span class="oi oi-ban"></span></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You're not logged in as admin.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    System.Security.Claims.ClaimsPrincipal _currentUser;

    List<ProjectModel> Projects { get; set; } = new List<ProjectModel>();

    protected override async Task OnInitializedAsync()
    {
        // Get the current logged in user
        _currentUser = (await AuthenticationStateTask).User;

        await GetProjects();
    }

    public async Task GetProjects()
    {
        var projects = await ProjectManager.GetAllProjectsAsync();

        Projects.Clear();

        foreach (var project in projects)
        {
            Projects.Add(project);
        }
    }

    async Task OpenNewProjectDialog()
    {

        await GetProjects();

        StateHasChanged();
    }

    async Task OpenEditProjectDialog(ProjectModel project)
    {


        await GetProjects();

        StateHasChanged();
    }

    async Task DeleteProject(ProjectModel project)
    {
        await ProjectManager.DeleteProjectAsync(project);

        await GetProjects();

        StateHasChanged();
    }
}
